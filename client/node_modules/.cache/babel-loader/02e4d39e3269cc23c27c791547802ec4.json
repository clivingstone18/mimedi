{"ast":null,"code":"var _jsxFileName = \"/Users/clairelivingstone/Desktop/healthpass/client/src/Map/DateTimeMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst addNewEvent = (summary, location, start, end) => {\n  var event = {\n    summary: \"MiMedi: \" + summary,\n    location: location,\n    start: start,\n    end: end\n  };\n  return event;\n};\n\nfunction addCalendarEvent(info) {\n  console.log(info);\n  let startRaw = new Date(info.date);\n  let endRaw = new Date(info.date);\n  endRaw.setMinutes(startRaw.getMinutes() + 30);\n  let start = {\n    dateTime: new Date(info.date).toISOString().toString(),\n    timeZone: \"Australia/Sydney\"\n  };\n  let end = {\n    dateTime: endRaw.toISOString().toString(),\n    timeZone: \"Australia/Sydney\"\n  };\n  var gapi = window.gapi;\n  var CLIENT_ID = \"249886028801-4635vef8o4vjcgj539du52m6go3u3vnk.apps.googleusercontent.com\";\n  var API_KEY = \"AIzaSyBlj1VnMflja9kGA73CB4VQ1rHTa2-oOO4\";\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n  gapi.load(\"client:auth2\", () => {\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    });\n    gapi.client.load(\"calendar\", \"v3\", () => {\n      let instance = gapi.auth2.getAuthInstance().then(() => {\n        var event = addNewEvent(info.summary, info.location, start, end);\n        var request = gapi.client.calendar.events.insert({\n          calendarId: \"primary\",\n          resource: event\n        });\n        request.execute(event => {\n          return \"DONE\";\n        });\n      });\n    });\n  });\n}\n\nexport const DateTimeMenu = ({\n  item,\n  type\n}) => {\n  _s();\n\n  const history = useHistory();\n  console.log(item, type);\n  const [date, onChange] = useState(new Date());\n  let location = item.address;\n  let summary = `${type} Appointment at ${item.nameOfClinic.replaceAll(\"-\", \" \").toUpperCase()}`; // assume a 30 min appointment\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your appointment details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Summary: \", summary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", location, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n          disableClock: true,\n          disableCalendar: true,\n          locale: \"US\",\n          onChange: a => {\n            onChange(a);\n            console.log(a);\n          },\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addCalendarEvent({\n          summary,\n          location,\n          date,\n          type\n        });\n        history.push(\"/cal\");\n      },\n      style: {\n        fontWeight: \"bold\",\n        color: \"white\",\n        padding: \"0.4rem\",\n        borderRadius: \"20px\"\n      },\n      class: \"btn\",\n      children: \"Confirm appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DateTimeMenu, \"a3KnkOdGNl/S10l94ElrHGHVGOg=\", false, function () {\n  return [useHistory];\n});\n\n_c = DateTimeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateTimeMenu\");","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/healthpass/client/src/Map/DateTimeMenu.js"],"names":["React","useState","DateTimePicker","useHistory","addNewEvent","summary","location","start","end","event","addCalendarEvent","info","console","log","startRaw","Date","date","endRaw","setMinutes","getMinutes","dateTime","toISOString","toString","timeZone","gapi","window","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","load","client","init","apiKey","clientId","discoveryDocs","scope","instance","auth2","getAuthInstance","then","request","calendar","events","insert","calendarId","resource","execute","DateTimeMenu","item","type","history","onChange","address","nameOfClinic","replaceAll","toUpperCase","display","flexDirection","a","push","fontWeight","color","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { useHistory } from \"react-router-dom\";\nconst addNewEvent = (summary, location, start, end) => {\n  var event = {\n    summary: \"MiMedi: \" + summary,\n    location: location,\n    start: start,\n    end: end,\n  };\n  return event;\n};\n\nfunction addCalendarEvent(info) {\n  console.log(info);\n  let startRaw = new Date(info.date);\n  let endRaw = new Date(info.date);\n  endRaw.setMinutes(startRaw.getMinutes() + 30);\n\n  let start = {\n    dateTime: new Date(info.date).toISOString().toString(),\n    timeZone: \"Australia/Sydney\",\n  };\n\n  let end = {\n    dateTime: endRaw.toISOString().toString(),\n    timeZone: \"Australia/Sydney\",\n  };\n\n  var gapi = window.gapi;\n  var CLIENT_ID =\n    \"249886028801-4635vef8o4vjcgj539du52m6go3u3vnk.apps.googleusercontent.com\";\n  var API_KEY = \"AIzaSyBlj1VnMflja9kGA73CB4VQ1rHTa2-oOO4\";\n  var DISCOVERY_DOCS = [\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n  ];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n  gapi.load(\"client:auth2\", () => {\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES,\n    });\n\n    gapi.client.load(\"calendar\", \"v3\", () => {\n      let instance = gapi.auth2.getAuthInstance().then(() => {\n        var event = addNewEvent(info.summary, info.location, start, end);\n\n        var request = gapi.client.calendar.events.insert({\n          calendarId: \"primary\",\n          resource: event,\n        });\n\n        request.execute((event) => {\n          return \"DONE\";\n        });\n      });\n    });\n  });\n}\n\nexport const DateTimeMenu = ({ item, type }) => {\n  const history = useHistory();\n  console.log(item, type)\n  const [date, onChange] = useState(new Date());\n  let location = item.address;\n  let summary = `${type} Appointment at ${item.nameOfClinic\n    .replaceAll(\"-\", \" \")\n    .toUpperCase()}`;\n\n  // assume a 30 min appointment\n\n  return (\n    <>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <h3>Your appointment details</h3>\n        <p>Summary: {summary}</p>\n        <p>Location: {location} </p>\n\n        <div>\n          <DateTimePicker\n            disableClock={true}\n            disableCalendar={true}\n            locale={\"US\"}\n            onChange={(a) => {\n              onChange(a);\n              console.log(a);\n            }}\n            value={date}\n          />\n        </div>\n      </div>\n\n      <br></br>\n\n      <button\n        onClick={() => {\n          addCalendarEvent({ summary, location, date, type });\n          history.push(\"/cal\");\n        }}\n        style={{\n          fontWeight: \"bold\",\n          color: \"white\",\n          padding: \"0.4rem\",\n          borderRadius: \"20px\",\n        }}\n        class=\"btn\"\n      >\n        Confirm appointment\n      </button>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}