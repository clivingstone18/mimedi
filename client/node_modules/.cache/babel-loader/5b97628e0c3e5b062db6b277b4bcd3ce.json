{"ast":null,"code":"var _jsxFileName = \"/Users/clairelivingstone/Desktop/healthpass/client/src/Calendar/ToolBar.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport clsx from 'clsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet navigate = {\n  PREVIOUS: 'PREV',\n  NEXT: 'NEXT',\n  TODAY: 'TODAY',\n  DATE: 'DATE'\n};\nexport let views = {\n  MONTH: 'month',\n  WEEK: 'week',\n  WORK_WEEK: 'work_week',\n  DAY: 'day'\n};\n\nclass Toolbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.navigate = action => {\n      this.props.onNavigate(action);\n    };\n\n    this.view = view => {\n      this.props.onView(view);\n    };\n  }\n\n  render() {\n    let {\n      localizer: {\n        messages\n      },\n      label\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"20px\"\n        },\n        className: \"rbc-toolbar-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rbc-btn-group\",\n        children: this.viewNamesGroup(messages)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  viewNamesGroup(messages) {\n    let viewNames = this.props.views;\n    const view = this.props.view;\n\n    if (viewNames.length > 1) {\n      return viewNames.map(name => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: clsx({\n          'rbc-active': view === name\n        }),\n        onClick: this.view.bind(null, name),\n        children: messages[name]\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n}\n\nToolbar.propTypes = {\n  view: PropTypes.string.isRequired,\n  views: PropTypes.arrayOf(PropTypes.string).isRequired,\n  label: PropTypes.node.isRequired,\n  localizer: PropTypes.object,\n  onNavigate: PropTypes.func.isRequired,\n  onView: PropTypes.func.isRequired\n};\nexport default Toolbar;","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/healthpass/client/src/Calendar/ToolBar.js"],"names":["PropTypes","React","clsx","navigate","PREVIOUS","NEXT","TODAY","DATE","views","MONTH","WEEK","WORK_WEEK","DAY","Toolbar","Component","action","props","onNavigate","view","onView","render","localizer","messages","label","fontSize","viewNamesGroup","viewNames","length","map","name","bind","propTypes","string","isRequired","arrayOf","node","object","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,MADG;AAEbC,EAAAA,IAAI,EAAE,MAFO;AAGbC,EAAAA,KAAK,EAAE,OAHM;AAIbC,EAAAA,IAAI,EAAE;AAJO,CAAf;AAOA,OAAO,IAAIC,KAAK,GAAG;AACjBC,EAAAA,KAAK,EAAE,OADU;AAEjBC,EAAAA,IAAI,EAAE,MAFW;AAGjBC,EAAAA,SAAS,EAAE,WAHM;AAIjBC,EAAAA,GAAG,EAAE;AAJY,CAAZ;;AAQP,MAAMC,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAkBpCX,QAlBoC,GAkBzBY,MAAM,IAAI;AACnB,WAAKC,KAAL,CAAWC,UAAX,CAAsBF,MAAtB;AACD,KApBmC;;AAAA,SAsBpCG,IAtBoC,GAsB7BA,IAAI,IAAI;AACb,WAAKF,KAAL,CAAWG,MAAX,CAAkBD,IAAlB;AACD,KAxBmC;AAAA;;AACpCE,EAAAA,MAAM,GAAG;AACP,QAAI;AACFC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF,OADT;AAEFC,MAAAA;AAFE,QAGA,KAAKP,KAHT;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAGE;AAAM,QAAA,KAAK,EAAE;AAACQ,UAAAA,QAAQ,EAAC;AAAV,SAAb;AAAgC,QAAA,SAAS,EAAC,mBAA1C;AAAA,kBAA+DD;AAA/D;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBAAiC,KAAKE,cAAL,CAAoBH,QAApB;AAAjC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAUDG,EAAAA,cAAc,CAACH,QAAD,EAAW;AACvB,QAAII,SAAS,GAAG,KAAKV,KAAL,CAAWR,KAA3B;AACA,UAAMU,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;;AAEA,QAAIQ,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,aAAOD,SAAS,CAACE,GAAV,CAAcC,IAAI,iBACvB;AACE,QAAA,IAAI,EAAC,QADP;AAGE,QAAA,SAAS,EAAE3B,IAAI,CAAC;AAAE,wBAAcgB,IAAI,KAAKW;AAAzB,SAAD,CAHjB;AAIE,QAAA,OAAO,EAAE,KAAKX,IAAL,CAAUY,IAAV,CAAe,IAAf,EAAqBD,IAArB,CAJX;AAAA,kBAMGP,QAAQ,CAACO,IAAD;AANX,SAEOA,IAFP;AAAA;AAAA;AAAA;AAAA,cADK,CAAP;AAUD;AACF;;AA1CmC;;AA6CtChB,OAAO,CAACkB,SAAR,GAAoB;AAClBb,EAAAA,IAAI,EAAElB,SAAS,CAACgC,MAAV,CAAiBC,UADL;AAElBzB,EAAAA,KAAK,EAAER,SAAS,CAACkC,OAAV,CAAkBlC,SAAS,CAACgC,MAA5B,EAAoCC,UAFzB;AAGlBV,EAAAA,KAAK,EAAEvB,SAAS,CAACmC,IAAV,CAAeF,UAHJ;AAIlBZ,EAAAA,SAAS,EAAErB,SAAS,CAACoC,MAJH;AAKlBnB,EAAAA,UAAU,EAAEjB,SAAS,CAACqC,IAAV,CAAeJ,UALT;AAMlBd,EAAAA,MAAM,EAAEnB,SAAS,CAACqC,IAAV,CAAeJ;AANL,CAApB;AASA,eAAepB,OAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport clsx from 'clsx'\n\nlet navigate = {\n  PREVIOUS: 'PREV',\n  NEXT: 'NEXT',\n  TODAY: 'TODAY',\n  DATE: 'DATE',\n}\n\nexport let views = {\n  MONTH: 'month',\n  WEEK: 'week',\n  WORK_WEEK: 'work_week',\n  DAY: 'day',\n}\n\n\nclass Toolbar extends React.Component {\n  render() {\n    let {\n      localizer: { messages },\n      label,\n    } = this.props\n\n    return (\n      <div className=\"rbc-toolbar\">\n\n\n        <span style={{fontSize:\"20px\"}} className=\"rbc-toolbar-label\">{label}</span>\n\n        <span className=\"rbc-btn-group\">{this.viewNamesGroup(messages)}</span>\n      </div>\n    )\n  }\n\n  navigate = action => {\n    this.props.onNavigate(action)\n  }\n\n  view = view => {\n    this.props.onView(view)\n  }\n\n  viewNamesGroup(messages) {\n    let viewNames = this.props.views\n    const view = this.props.view\n\n    if (viewNames.length > 1) {\n      return viewNames.map(name => (\n        <button\n          type=\"button\"\n          key={name}\n          className={clsx({ 'rbc-active': view === name })}\n          onClick={this.view.bind(null, name)}\n        >\n          {messages[name]}\n        </button>\n      ))\n    }\n  }\n}\n\nToolbar.propTypes = {\n  view: PropTypes.string.isRequired,\n  views: PropTypes.arrayOf(PropTypes.string).isRequired,\n  label: PropTypes.node.isRequired,\n  localizer: PropTypes.object,\n  onNavigate: PropTypes.func.isRequired,\n  onView: PropTypes.func.isRequired,\n}\n\nexport default Toolbar\n"]},"metadata":{},"sourceType":"module"}