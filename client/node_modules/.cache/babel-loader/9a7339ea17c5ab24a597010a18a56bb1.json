{"ast":null,"code":"var _jsxFileName = \"/Users/clairelivingstone/Desktop/healthpass/client/src/Map/MapPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Map } from \"./Map\";\nimport { DropDownSelect } from \"./DropDownSelect\";\nimport axios from \"axios\";\nimport * as Scroll from 'react-scroll';\nimport { Link, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet findPracs = \"http://localhost:5000/api/findPrac\";\nexport const MapPage = () => {\n  _s();\n\n  const [GP, setGP] = useState([]);\n  const [dent, setDent] = useState([]);\n  const [opto, setOpto] = useState([]);\n  const [psych, setPsych] = useState([]);\n  const [gyno, setGyno] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [suburbs, setSuburbs] = useState([]);\n  const [facilities, setFacilities] = useState([]);\n  const [services, setServices] = useState([{\n    name: \"Psychologist\"\n  }, {\n    name: \"GP\"\n  }, {\n    name: \"Optometrist\"\n  }, {\n    name: \"Dentist\"\n  }, {\n    name: \"Gynaecologist\"\n  }]);\n  const [options, setOptions] = useState([]);\n\n  const onSubmit = () => {\n    /* resset all */\n    setGP([]);\n    setOpto([]);\n    setPsych([]);\n    setDent([]);\n    setGyno([]);\n\n    if (suburbs.length == 0) {\n      alert(\"Please include a suburb!\");\n    }\n\n    console.log(services); // then, send to backend\n\n    axios.post(findPracs, {\n      suburbs,\n      languages,\n      facilities,\n      services,\n      options\n    }).then(res => {\n      let data = res.data;\n      console.log(data);\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].name == \"Psychologist\") {\n          setPsych(data[i].response);\n        }\n\n        if (data[i].name == \"Optometrist\") {\n          setOpto(data[i].response);\n        }\n\n        if (data[i].name == \"Dentist\") {\n          setDent(data[i].response);\n        }\n\n        if (data[i].name == \"GP\") {\n          setGP(data[i].response);\n        }\n\n        if (data[i].name == \"Gynaecologist\") {\n          setGyno(data[i].response);\n        }\n      }\n\n      scroll.scrollToBottom();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#42C0BD\"\n      },\n      children: \"Mi Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDownSelect, {\n      onSubmit: onSubmit,\n      setOptions: setOptions,\n      setServices: setServices,\n      setLanguages: setLanguages,\n      setSuburbs: setSuburbs,\n      setFacilities: setFacilities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      to: \"map\",\n      GP: GP,\n      dent: dent,\n      psych: psych,\n      opto: opto,\n      gyno: gyno\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapPage, \"timQWjC4cZM+ub1KvIbnw4ze8lY=\");\n\n_c = MapPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/healthpass/client/src/Map/MapPage.js"],"names":["React","useEffect","useState","Map","DropDownSelect","axios","Scroll","Link","Element","Events","animateScroll","scroll","scrollSpy","scroller","findPracs","MapPage","GP","setGP","dent","setDent","opto","setOpto","psych","setPsych","gyno","setGyno","languages","setLanguages","suburbs","setSuburbs","facilities","setFacilities","services","setServices","name","options","setOptions","onSubmit","length","alert","console","log","post","then","res","data","i","response","scrollToBottom","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Map} from \"./Map\";\nimport {DropDownSelect} from \"./DropDownSelect\"\nimport axios from \"axios\";\nimport * as Scroll from 'react-scroll';\n\nimport { Link, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nlet findPracs = \"http://localhost:5000/api/findPrac\"\n\n\nexport const MapPage = () => {\n    const [GP, setGP] = useState([]);\n    const [dent, setDent] = useState([]);\n    const [opto, setOpto] = useState([]);\n    const [psych, setPsych] = useState([]);\n    const [gyno, setGyno] = useState([]);\n  \n    const [languages, setLanguages] = useState([]);\n    const [suburbs, setSuburbs] = useState([]);\n    const [facilities, setFacilities] = useState([]);\n    const [services, setServices] = useState([{name:\"Psychologist\"},\n    {name:\"GP\"},{name:\"Optometrist\"},{name:\"Dentist\"},{name:\"Gynaecologist\"}]);\n    const [options, setOptions] = useState([]);\n  \n    const onSubmit = () => {\n      /* resset all */ \n      setGP([]);\n      setOpto([]);\n      setPsych([]);\n      setDent([]);\n      setGyno([]);\n  \n      if (suburbs.length == 0) {\n        alert(\n          \"Please include a suburb!\"\n        )\n      }\n      console.log(services);\n      // then, send to backend\n      axios.post(findPracs, {suburbs, languages, facilities, services, options}).then(res=>{\n        let data = res.data\n        console.log(data);\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].name == \"Psychologist\") {\n            setPsych(data[i].response);\n          }\n          if (data[i].name  == \"Optometrist\") {\n            setOpto(data[i].response);\n          }\n          if (data[i].name  == \"Dentist\") {\n            setDent(data[i].response);\n          }\n          if (data[i].name  == \"GP\") {\n            setGP(data[i].response);\n          }\n          if (data[i].name  == \"Gynaecologist\") {\n            setGyno(data[i].response);\n          }\n        }\n        scroll.scrollToBottom();\n\n      })\n    }\n\n    return(\n        <>\n\n        <h1 style={{color:\"#42C0BD\"}}>Mi Search</h1>\n        <DropDownSelect onSubmit={onSubmit} setOptions={setOptions} setServices={setServices} setLanguages={setLanguages} setSuburbs={setSuburbs} setFacilities={setFacilities}/>\n\n        <Map to=\"map\" GP={GP} dent={dent} psych={psych} opto={opto} gyno={gyno} />\n\n        </>\n\n\n\n\n    )\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}