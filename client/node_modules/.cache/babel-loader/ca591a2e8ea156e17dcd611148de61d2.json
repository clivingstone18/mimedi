{"ast":null,"code":"var _jsxFileName = \"/Users/clairelivingstone/Desktop/healthpass/client/src/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetAddress } from \"./GetAddress\";\nimport \"@reach/combobox/styles.css\";\nimport { DateTimeMenu } from \"./DateTimeMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\nconst options = {\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst handleOpen = link => {\n  window.open(link);\n};\n\nexport const Map = ({\n  opto,\n  dent,\n  GP,\n  psych,\n  gyno\n}) => {\n  _s();\n\n  const [center, setCenter] = useState({\n    lat: -37.8,\n    lng: 144.96\n  });\n  const [calView, setCalView] = useState(false);\n  const [calendarPrompt, showCalendarPrompt] = useState(false);\n  const [selected, setSelected] = useState();\n  const [addresses, setAddresses] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [sum, setSum] = useState([]);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n\n  const obtainImgUrl = i => {\n    if (i < sum[0]) {\n      return \"psych.svg\";\n    }\n\n    if (i < sum[0] + sum[1]) {\n      return \"gp.svg\";\n    }\n\n    if (i < sum[0] + sum[1] + sum[2]) {\n      return \"dentist.svg\";\n    }\n\n    if (i < sum[0] + sum[1] + sum[2] + sum[3]) {\n      return \"optometrist.svg\";\n    }\n\n    return \"gyno.svg\";\n  };\n\n  const getType = i => {\n    if (i < sum[0]) {\n      return \"Psychologist\";\n    }\n\n    if (i < sum[0] + sum[1]) {\n      return \"GP\";\n    }\n\n    if (i < sum[0] + sum[1] + sum[2]) {\n      return \"Dentist\";\n    }\n\n    if (i < sum[0] + sum[1] + sum[2] + sum[3]) {\n      return \"Optometrist\";\n    }\n\n    return \"Gynaecologist\";\n  };\n\n  useEffect(() => {\n    setSum([psych.length, GP.length, dent.length, opto.length, gyno.length]); // which index do they start at ?\n\n    let promises = [];\n    promises.push(GetAddress(psych));\n    promises.push(GetAddress(GP));\n    promises.push(GetAddress(dent));\n    promises.push(GetAddress(opto));\n    promises.push(GetAddress(gyno));\n    Promise.all(promises).then(res => {\n      setMarkers(res.flat(Infinity));\n      setAddresses([psych, GP, dent, opto, gyno].flat(Infinity));\n    });\n  }, [opto, dent, GP, psych, gyno]);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n\n  if (center) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"green\",\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          flexDirection: \"column\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        zoom: 14,\n        center: center,\n        options: options,\n        onLoad: onMapLoad,\n        children: [markers.map((val, i) => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: val.lat,\n              lng: val.lng\n            },\n            onClick: () => {\n              setSelected({\n                val: val,\n                i: i\n              });\n              showCalendarPrompt(false);\n              setCalView(false);\n            },\n            icon: {\n              url: obtainImgUrl(i),\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(15, 15),\n              scaledSize: new window.google.maps.Size(30, 30)\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this);\n        }), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n            position: {\n              lat: selected.val.lat,\n              lng: selected.val.lng\n            },\n            onCloseClick: () => {\n              setSelected(null);\n              showCalendarPrompt(false);\n              setCalView(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"rem\"\n              },\n              children: [!calendarPrompt && !calView && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: addresses[selected.i].nameOfClinic.replaceAll(\"-\", \" \").toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: addresses[selected.i].address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Languages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this), addresses[selected.i].pracLanguages.map(j => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: j\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 32\n                  }, this);\n                }), addresses[selected.i].bulkBill && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Bulk Billing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 58\n                }, this), addresses[selected.i].teleHealth && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Telehealth Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    fontWeight: \"bold\",\n                    color: \"white\",\n                    padding: \"0.8rem\",\n                    borderRadius: \"20px\"\n                  },\n                  className: \"btn\",\n                  onClick: () => {\n                    showCalendarPrompt(true);\n                    handleOpen(addresses[selected.i].link);\n                  },\n                  children: \"BOOK NOW\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), calendarPrompt && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    width: \"100px\",\n                    height: \"100px\"\n                  },\n                  src: \"owl.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Looks like you have booked an appointment!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Would you like to add it to your MiCal?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginRight: \"10px\",\n                    fontWeight: \"bold\",\n                    color: \"white\",\n                    padding: \"0.25rem\",\n                    borderRadius: \"20px\"\n                  },\n                  class: \"btn\",\n                  onClick: () => {\n                    setSelected(\"\");\n                    showCalendarPrompt(false);\n                  },\n                  children: [\" \", \"No - keep looking.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    fontWeight: \"bold\",\n                    color: \"white\",\n                    padding: \"0.25rem\",\n                    borderRadius: \"20px\"\n                  },\n                  class: \"btn\",\n                  onClick: () => {\n                    setCalView(true);\n                    showCalendarPrompt(false);\n                  },\n                  children: \"Add to calendar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), calView && /*#__PURE__*/_jsxDEV(DateTimeMenu, {\n                item: addresses[selected.i],\n                type: getType(selected.i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Map, \"1BfQxRTPSvXKIGcxwyttSXtc3RY=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/healthpass/client/src/Map/Map.js"],"names":["React","useState","useEffect","GoogleMap","useLoadScript","Marker","InfoWindow","useHistory","GetAddress","DateTimeMenu","libraries","mapContainerStyle","width","height","options","disableDefaultUI","zoomControl","handleOpen","link","window","open","Map","opto","dent","GP","psych","gyno","center","setCenter","lat","lng","calView","setCalView","calendarPrompt","showCalendarPrompt","selected","setSelected","addresses","setAddresses","markers","setMarkers","sum","setSum","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapRef","useRef","onMapLoad","useCallback","map","current","obtainImgUrl","i","getType","length","promises","push","Promise","all","then","res","flat","Infinity","background","display","justifyContent","flexDirection","val","url","origin","google","maps","Point","anchor","scaledSize","Size","padding","nameOfClinic","replaceAll","toUpperCase","address","pracLanguages","j","bulkBill","teleHealth","fontWeight","color","borderRadius","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,wBALP;AAMA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,4BAAP;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AACA,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1B;AAKA,MAAMC,OAAO,GAAG;AACdC,EAAAA,gBAAgB,EAAE,IADJ;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAhB;;AAKA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3BC,EAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ;AACD,CAFD;;AAIA,OAAO,MAAMG,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,EAAd;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KAAqC;AAAA;;AACtD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC;AAAE4B,IAAAA,GAAG,EAAE,CAAC,IAAR;AAAcC,IAAAA,GAAG,EAAE;AAAnB,GAAD,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgC,cAAD,EAAiBC,kBAAjB,IAAuCjC,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,EAAxC;AACA,QAAM,CAACoC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACsC,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwC,GAAD,EAAMC,MAAN,IAAgBzC,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAM;AAAE0C,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BxC,aAAa,CAAC;AAC5CyC,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADc;AAE5CtC,IAAAA;AAF4C,GAAD,CAA7C;AAKA,QAAMuC,MAAM,GAAGjD,KAAK,CAACkD,MAAN,EAAf;AACA,QAAMC,SAAS,GAAGnD,KAAK,CAACoD,WAAN,CAAmBC,GAAD,IAAS;AAC3CJ,IAAAA,MAAM,CAACK,OAAP,GAAiBD,GAAjB;AACD,GAFiB,EAEf,EAFe,CAAlB;;AAIA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIA,CAAC,GAAGf,GAAG,CAAC,CAAD,CAAX,EAAgB;AACd,aAAO,WAAP;AACD;;AACD,QAAIe,CAAC,GAAGf,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAApB,EAAyB;AACvB,aAAO,QAAP;AACD;;AACD,QAAIe,CAAC,GAAGf,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAA7B,EAAkC;AAChC,aAAO,aAAP;AACD;;AACD,QAAIe,CAAC,GAAGf,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAArB,GAA2BA,GAAG,CAAC,CAAD,CAAtC,EAA2C;AACzC,aAAO,iBAAP;AACD;;AACD,WAAO,UAAP;AACD,GAdD;;AAgBA,QAAMgB,OAAO,GAAID,CAAD,IAAO;AACrB,QAAIA,CAAC,GAAGf,GAAG,CAAC,CAAD,CAAX,EAAgB;AACd,aAAO,cAAP;AACD;;AACD,QAAIe,CAAC,GAAGf,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAApB,EAAyB;AACvB,aAAO,IAAP;AACD;;AACD,QAAIe,CAAC,GAAGf,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAA7B,EAAkC;AAChC,aAAO,SAAP;AACD;;AACD,QAAIe,CAAC,GAAGf,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAArB,GAA2BA,GAAG,CAAC,CAAD,CAAtC,EAA2C;AACzC,aAAO,aAAP;AACD;;AACD,WAAO,eAAP;AACD,GAdD;;AAgBAvC,EAAAA,SAAS,CAAC,MAAM;AACdwC,IAAAA,MAAM,CAAC,CAACjB,KAAK,CAACiC,MAAP,EAAelC,EAAE,CAACkC,MAAlB,EAA0BnC,IAAI,CAACmC,MAA/B,EAAuCpC,IAAI,CAACoC,MAA5C,EAAoDhC,IAAI,CAACgC,MAAzD,CAAD,CAAN,CADc,CAEd;;AACA,QAAIC,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,CAACC,IAAT,CAAcpD,UAAU,CAACiB,KAAD,CAAxB;AACAkC,IAAAA,QAAQ,CAACC,IAAT,CAAcpD,UAAU,CAACgB,EAAD,CAAxB;AACAmC,IAAAA,QAAQ,CAACC,IAAT,CAAcpD,UAAU,CAACe,IAAD,CAAxB;AACAoC,IAAAA,QAAQ,CAACC,IAAT,CAAcpD,UAAU,CAACc,IAAD,CAAxB;AACAqC,IAAAA,QAAQ,CAACC,IAAT,CAAcpD,UAAU,CAACkB,IAAD,CAAxB;AACAmC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBI,IAAtB,CAA4BC,GAAD,IAAS;AAClCxB,MAAAA,UAAU,CAACwB,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAD,CAAV;AACA5B,MAAAA,YAAY,CAAC,CAACb,KAAD,EAAQD,EAAR,EAAYD,IAAZ,EAAkBD,IAAlB,EAAwBI,IAAxB,EAA8BuC,IAA9B,CAAmCC,QAAnC,CAAD,CAAZ;AACD,KAHD;AAID,GAbQ,EAaN,CAAC5C,IAAD,EAAOC,IAAP,EAAaC,EAAb,EAAiBC,KAAjB,EAAwBC,IAAxB,CAbM,CAAT;AAeA,MAAIkB,SAAJ,EAAe,OAAO,oBAAP;AACf,MAAI,CAACD,QAAL,EAAe,OAAO,cAAP;;AAEf,MAAIhB,MAAJ,EAAY;AACV,wBACE;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AACLwC,UAAAA,UAAU,EAAE,OADP;AAELC,UAAAA,OAAO,EAAE,MAFJ;AAGLC,UAAAA,cAAc,EAAE,cAHX;AAILC,UAAAA,aAAa,EAAE;AAJV;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,SAAD;AACE,QAAA,iBAAiB,EAAE3D,iBADrB;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,MAAM,EAAEgB,MAHV;AAIE,QAAA,OAAO,EAAEb,OAJX;AAKE,QAAA,MAAM,EAAEqC,SALV;AAAA,mBAOGZ,OAAO,CAACc,GAAR,CAAY,CAACkB,GAAD,EAAMf,CAAN,KAAY;AACvB,8BACE,QAAC,MAAD;AAEE,YAAA,QAAQ,EAAE;AAAE3B,cAAAA,GAAG,EAAE0C,GAAG,CAAC1C,GAAX;AAAgBC,cAAAA,GAAG,EAAEyC,GAAG,CAACzC;AAAzB,aAFZ;AAGE,YAAA,OAAO,EAAE,MAAM;AACbM,cAAAA,WAAW,CAAC;AAAEmC,gBAAAA,GAAG,EAAEA,GAAP;AAAYf,gBAAAA,CAAC,EAAEA;AAAf,eAAD,CAAX;AACAtB,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAF,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD,aAPH;AAQE,YAAA,IAAI,EAAE;AACJwC,cAAAA,GAAG,EAAEjB,YAAY,CAACC,CAAD,CADb;AAEJiB,cAAAA,MAAM,EAAE,IAAItD,MAAM,CAACuD,MAAP,CAAcC,IAAd,CAAmBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAFJ;AAGJC,cAAAA,MAAM,EAAE,IAAI1D,MAAM,CAACuD,MAAP,CAAcC,IAAd,CAAmBC,KAAvB,CAA6B,EAA7B,EAAiC,EAAjC,CAHJ;AAIJE,cAAAA,UAAU,EAAE,IAAI3D,MAAM,CAACuD,MAAP,CAAcC,IAAd,CAAmBI,IAAvB,CAA4B,EAA5B,EAAgC,EAAhC;AAJR;AARR,aACOvB,CADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAiBD,SAlBA,CAPH,EA2BGrB,QAAQ,gBACP;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,QAAQ,EAAE;AAAEN,cAAAA,GAAG,EAAEM,QAAQ,CAACoC,GAAT,CAAa1C,GAApB;AAAyBC,cAAAA,GAAG,EAAEK,QAAQ,CAACoC,GAAT,CAAazC;AAA3C,aADZ;AAEE,YAAA,YAAY,EAAE,MAAM;AAClBM,cAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAF,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD,aANH;AAAA,mCAQE;AAAK,cAAA,KAAK,EAAE;AAAEgD,gBAAAA,OAAO,EAAE;AAAX,eAAZ;AAAA,yBACG,CAAC/C,cAAD,IAAmB,CAACF,OAApB,iBACC;AAAA,wCACE;AAAA,4BACGM,SAAS,CAACF,QAAQ,CAACqB,CAAV,CAAT,CAAsByB,YAAtB,CACEC,UADF,CACa,GADb,EACkB,GADlB,EAEEC,WAFF;AADH;AAAA;AAAA;AAAA;AAAA,wBADF,eAME;AAAA,4BAAK9C,SAAS,CAACF,QAAQ,CAACqB,CAAV,CAAT,CAAsB4B;AAA3B;AAAA;AAAA;AAAA;AAAA,wBANF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,EASG/C,SAAS,CAACF,QAAQ,CAACqB,CAAV,CAAT,CAAsB6B,aAAtB,CAAoChC,GAApC,CAAyCiC,CAAD,IAAO;AAC9C,sCAAO;AAAA,8BAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD,iBAFA,CATH,EAaGjD,SAAS,CAACF,QAAQ,CAACqB,CAAV,CAAT,CAAsB+B,QAAtB,iBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbrC,EAcGlD,SAAS,CAACF,QAAQ,CAACqB,CAAV,CAAT,CAAsBgC,UAAtB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfJ,eAkBE;AACE,kBAAA,KAAK,EAAE;AACLC,oBAAAA,UAAU,EAAE,MADP;AAELC,oBAAAA,KAAK,EAAE,OAFF;AAGLV,oBAAAA,OAAO,EAAE,QAHJ;AAILW,oBAAAA,YAAY,EAAE;AAJT,mBADT;AAOE,kBAAA,SAAS,EAAC,KAPZ;AAQE,kBAAA,OAAO,EAAE,MAAM;AACbzD,oBAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAjB,oBAAAA,UAAU,CAACoB,SAAS,CAACF,QAAQ,CAACqB,CAAV,CAAT,CAAsBtC,IAAvB,CAAV;AACD,mBAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBF;AAAA,8BAFJ,EAsCGe,cAAc,iBACb;AAAA,wCACE;AACE,kBAAA,KAAK,EAAE;AAAErB,oBAAAA,KAAK,EAAE,OAAT;AAAkBC,oBAAAA,MAAM,EAAE;AAA1B,mBADT;AAEE,kBAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,wBADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eASE;AACE,kBAAA,KAAK,EAAE;AACL+E,oBAAAA,WAAW,EAAE,MADR;AAELH,oBAAAA,UAAU,EAAE,MAFP;AAGLC,oBAAAA,KAAK,EAAE,OAHF;AAILV,oBAAAA,OAAO,EAAE,SAJJ;AAKLW,oBAAAA,YAAY,EAAE;AALT,mBADT;AAQE,kBAAA,KAAK,EAAC,KARR;AASE,kBAAA,OAAO,EAAE,MAAM;AACbvD,oBAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,oBAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,mBAZH;AAAA,6BAcG,GAdH;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,eA0BE;AACE,kBAAA,KAAK,EAAE;AACLuD,oBAAAA,UAAU,EAAE,MADP;AAELC,oBAAAA,KAAK,EAAE,OAFF;AAGLV,oBAAAA,OAAO,EAAE,SAHJ;AAILW,oBAAAA,YAAY,EAAE;AAJT,mBADT;AAOE,kBAAA,KAAK,EAAC,KAPR;AAQE,kBAAA,OAAO,EAAE,MAAM;AACb3D,oBAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,oBAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,mBAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1BF;AAAA,8BAvCJ,EAmFGH,OAAO,iBACN,QAAC,YAAD;AACE,gBAAA,IAAI,EAAEM,SAAS,CAACF,QAAQ,CAACqB,CAAV,CADjB;AAEE,gBAAA,IAAI,EAAEC,OAAO,CAACtB,QAAQ,CAACqB,CAAV;AAFf;AAAA;AAAA;AAAA;AAAA,sBApFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADO,GAsGL,IAjIN;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgJD,GAjJD,MAiJO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAzNM;;GAAMnC,G;UASqBjB,a;;;KATrBiB,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetAddress } from \"./GetAddress\";\nimport \"@reach/combobox/styles.css\";\nimport { DateTimeMenu } from \"./DateTimeMenu\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"100vh\",\n};\n\nconst options = {\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nconst handleOpen = (link) => {\n  window.open(link);\n};\n\nexport const Map = ({ opto, dent, GP, psych, gyno }) => {\n  const [center, setCenter] = useState({ lat: -37.8, lng: 144.96 });\n  const [calView, setCalView] = useState(false);\n  const [calendarPrompt, showCalendarPrompt] = useState(false);\n  const [selected, setSelected] = useState();\n  const [addresses, setAddresses] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [sum, setSum] = useState([]);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries,\n  });\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const obtainImgUrl = (i) => {\n    if (i < sum[0]) {\n      return \"psych.svg\";\n    }\n    if (i < sum[0] + sum[1]) {\n      return \"gp.svg\";\n    }\n    if (i < sum[0] + sum[1] + sum[2]) {\n      return \"dentist.svg\";\n    }\n    if (i < sum[0] + sum[1] + sum[2] + sum[3]) {\n      return \"optometrist.svg\";\n    }\n    return \"gyno.svg\";\n  };\n\n  const getType = (i) => {\n    if (i < sum[0]) {\n      return \"Psychologist\";\n    }\n    if (i < sum[0] + sum[1]) {\n      return \"GP\";\n    }\n    if (i < sum[0] + sum[1] + sum[2]) {\n      return \"Dentist\";\n    }\n    if (i < sum[0] + sum[1] + sum[2] + sum[3]) {\n      return \"Optometrist\";\n    }\n    return \"Gynaecologist\";\n  };\n\n  useEffect(() => {\n    setSum([psych.length, GP.length, dent.length, opto.length, gyno.length]);\n    // which index do they start at ?\n    let promises = [];\n    promises.push(GetAddress(psych));\n    promises.push(GetAddress(GP));\n    promises.push(GetAddress(dent));\n    promises.push(GetAddress(opto));\n    promises.push(GetAddress(gyno));\n    Promise.all(promises).then((res) => {\n      setMarkers(res.flat(Infinity));\n      setAddresses([psych, GP, dent, opto, gyno].flat(Infinity));\n    });\n  }, [opto, dent, GP, psych, gyno]);\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n\n  if (center) {\n    return (\n      <div>\n        <div\n          style={{\n            background: \"green\",\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            flexDirection: \"column\",\n          }}\n        ></div>\n\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          zoom={14}\n          center={center}\n          options={options}\n          onLoad={onMapLoad}\n        >\n          {markers.map((val, i) => {\n            return (\n              <Marker\n                key={i}\n                position={{ lat: val.lat, lng: val.lng }}\n                onClick={() => {\n                  setSelected({ val: val, i: i });\n                  showCalendarPrompt(false);\n                  setCalView(false);\n                }}\n                icon={{\n                  url: obtainImgUrl(i),\n                  origin: new window.google.maps.Point(0, 0),\n                  anchor: new window.google.maps.Point(15, 15),\n                  scaledSize: new window.google.maps.Size(30, 30),\n                }}\n              />\n            );\n          })}\n\n          {selected ? (\n            <div>\n              <InfoWindow\n                position={{ lat: selected.val.lat, lng: selected.val.lng }}\n                onCloseClick={() => {\n                  setSelected(null);\n                  showCalendarPrompt(false);\n                  setCalView(false);\n                }}\n              >\n                <div style={{ padding: \"rem\" }}>\n                  {!calendarPrompt && !calView && (\n                    <>\n                      <h2>\n                        {addresses[selected.i].nameOfClinic\n                          .replaceAll(\"-\", \" \")\n                          .toUpperCase()}\n                      </h2>\n                      <h3>{addresses[selected.i].address}</h3>\n\n                      <h3>Languages</h3>\n                      {addresses[selected.i].pracLanguages.map((j) => {\n                        return <p>{j}</p>;\n                      })}\n\n                      {addresses[selected.i].bulkBill && <h3>Bulk Billing</h3>}\n                      {addresses[selected.i].teleHealth && (\n                        <h3>Telehealth Available</h3>\n                      )}\n\n                      <button\n                        style={{\n                          fontWeight: \"bold\",\n                          color: \"white\",\n                          padding: \"0.8rem\",\n                          borderRadius: \"20px\",\n                        }}\n                        className=\"btn\"\n                        onClick={() => {\n                          showCalendarPrompt(true);\n                          handleOpen(addresses[selected.i].link);\n                        }}\n                      >\n                        BOOK NOW\n                      </button>\n                    </>\n                  )}\n\n                  {calendarPrompt && (\n                    <>\n                      <img\n                        style={{ width: \"100px\", height: \"100px\" }}\n                        src=\"owl.png\"\n                      ></img>\n\n                      <p>Looks like you have booked an appointment!</p>\n                      <p>Would you like to add it to your MiCal?</p>\n\n                      <button\n                        style={{\n                          marginRight: \"10px\",\n                          fontWeight: \"bold\",\n                          color: \"white\",\n                          padding: \"0.25rem\",\n                          borderRadius: \"20px\",\n                        }}\n                        class=\"btn\"\n                        onClick={() => {\n                          setSelected(\"\");\n                          showCalendarPrompt(false);\n                        }}\n                      >\n                        {\" \"}\n                        No - keep looking.\n                      </button>\n                      <button\n                        style={{\n                          fontWeight: \"bold\",\n                          color: \"white\",\n                          padding: \"0.25rem\",\n                          borderRadius: \"20px\",\n                        }}\n                        class=\"btn\"\n                        onClick={() => {\n                          setCalView(true);\n                          showCalendarPrompt(false);\n                        }}\n                      >\n                        Add to calendar\n                      </button>\n                    </>\n                  )}\n\n                  {calView && (\n                    <DateTimeMenu\n                      item={addresses[selected.i]}\n                      type={getType(selected.i)}\n                    />\n                  )}\n                </div>\n              </InfoWindow>\n            </div>\n          ) : null}\n        </GoogleMap>\n      </div>\n    );\n  } else {\n    return <div>LOADING</div>;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}